#!/usr/bin/env bash

. `pwd`/docker/config.sh

startMysqlContainerWithDump() {

    docker rm "$1-mysql"
    #Download dump and run mysql container
    echo "Available sql file: "
    ls -l "$ASSETS_FOLDER/$1/$2" | grep .sql
    read -p "Choice sql file to init database: " sqlDump

    checkFileExist=true
    while $checkFileExist; do
        if [ -e "$ASSETS_FOLDER/$1/$2/$sqlDump" ]
        then
            rm -rf initdb/*
            cp "$ASSETS_FOLDER/$1/$2/$sqlDump" initdb

            checkFileExist=false
        else
            read -p "Choice a valid sql file: " sqlDump
        fi
    done

    docker run -d --name "$1-mysql" --network "$1-network" -p 3306:3306 -e MYSQL_ROOT_PASSWORD=root -e MYSQL_DATABASE="$1_$2" -v "$SCRIPTPATH"/initdb:/docker-entrypoint-initdb.d --restart=always "$REGISTRY/mysql57"
}

startMysqlContainer() {
    docker start "$1-mysql"
}

#Stop and remove existing container
docker stop "$1-mysql"
docker stop "$1-phpmyadmin" && docker rm "$1-phpmyadmin"
docker stop "$1-php-apache" && docker rm "$1-php-apache"

#Clean network
#docker network rm "$1-network"
#docker network create "$1-network"

#Update local mysql image
docker pull "$REGISTRY/mysql57"
docker pull "$REGISTRY/phpmyadmin"

read -p "Do you want start from a new database? " yn
checkNewDatabase=true
while $checkNewDatabase; do
    case $yn in
        [Yy] ) startMysqlContainerWithDump $1 $2
               checkNewDatabase=false
               ;;
        [Nn] ) startMysqlContainer $1 $2
               checkNewDatabase=false
               ;;
        * ) read -p "Please answer Yy or Nn " yn
            ;;
    esac
done

docker run -d --name banca5extranet-phpmyadmin --network "$1-network" -e PMA_HOST="$1-mysql" -e PMA_PORT=3306 -p 8080:80 "$REGISTRY/phpmyadmin"

read -p "Choice document root (absolute path): " docRoot
checkDocRoot=true
while $checkDocRoot; do
    if [ -n "$docRoot" ]
    then
        ipAddress=`ifconfig | grep -Eo 'inet (addr:)?([0-9]*\.){3}[0-9]*' | grep -Eo '([0-9]*\.){3}[0-9]*' | grep -v '127.0.0.1'`

        docker run -d --name "$1-php-apache" --network "$1-network" --link "$1-mysql:$1-mysql" -p 8000:80 -e XDEBUG_CONFIG="remote_host=$ipAddress" -v "$docRoot":/var/www/html "$REGISTRY/php70-apache"
        checkDocRoot=false
    else
        read -p "Choice a valid document root (absolute path): " docRoot
    fi
done

cp "$docRoot"/sites/example.settings.docker.local."$2".php "$docRoot"/sites/default/settings.php
cp "$docRoot"/sites/example.settings.local.develop.php "$docRoot"/sites/default/settings.local.php


