#!/usr/bin/env bash

. `pwd`/docker-config/config.sh
. common

# Update assets
updateImages() {

    echo -n "Which project do you want to synchronize? "
    read projectInput

    #Copy drupal assets and settings
    if [[ "$AVAILABLE_PLATFORM" == wordpress ]]
    then
        echo "$SSH_USERNAME"@"$REMOTE_HOST":"/home/$SSH_USERNAME/uploads.zip TO $PROJECT_ASSETS_FOLDER"
        sleep 5
        ssh "$SSH_USERNAME"@"$REMOTE_HOST" sudo cp "$ASSETS_FOLDER/$projectInput/$branchInput/uploads.zip /home/$SSH_USERNAME"
        if [ $? -eq 0 ]; then
            scp -r "$SSH_USERNAME"@"$REMOTE_HOST":"/home/$SSH_USERNAME/uploads.zip" "$PROJECT_ASSETS_FOLDER"
            if [ $? -eq 0 ]; then
                echo "uploads.zip has been copied inside $PROJECT_ASSETS_FOLDER"
                cd "$PROJECT_ASSETS_FOLDER"
                unzip uploads.zip
                if [ $? -eq 0 ]; then
                    echo "Uploads folder has been unzipped"
                    rm -rf "$PROJECT_ASSETS_FOLDER/uploads.zip"
                else
                    echo "Failed attempt to unzip uploads folder. Do you have unzip command installed? Check and retry"
                    exit
                fi

            else
                echo "Failed attempt ssh connection for $SSH_USERNAME to $REMOTE_HOST"
                exit
            fi
        else
            echo "Failed attempt ssh connection for $SSH_USERNAME to $REMOTE_HOST"
            exit
        fi
    fi

    #ToDo: other platforms
}

checkDockerStatus
choiceBranch

read -p "Do you want to synchronize assets folder [Yy/Nn]?" yn
checkDockerStatus=true
while $checkDockerStatus; do
    case $yn in
        [Yy] ) showActiveProjects
               checkDockerStatus=false
               ;;
        [Nn] ) echo "Assets not will be synchronized"
                checkDockerStatus=false
                ;;
        * ) read -p "Please answer Yy or Nn " yn
            ;;
    esac
done

#Stop and remove existing container
docker stop "$projectInput-phpmyadmin" && docker rm "$projectInput-phpmyadmin"
docker stop "$projectInput-php-apache" && docker rm "$projectInput-php-apache"

#Clean network
docker network rm "$projectInput-network"
docker network create "$projectInput-network"

#Update local mysql image
docker pull "$REGISTRY/phpmyadmin"

# Run phpmyadmin image
if [ ! -z "$REMOTE_MYSQL_HOST" ] && [ ! -z "$REMOTE_MYSQL_PORT" ]; then
   docker run -d --name "$projectInput"-phpmyadmin --network "$projectInput-network" -e PMA_HOST="$REMOTE_MYSQL_HOST" -e PMA_PORT="$REMOTE_MYSQL_PORT" -p 8888:80 "$REGISTRY/phpmyadmin"
fi

# Run php-apache image
docker pull "$REGISTRY/$PHP_APACHE_VERSION"

ipAddress=`ifconfig | grep -Eo 'inet (addr:)?([0-9]*\.){3}[0-9]*' | grep -Eo '([0-9]*\.){3}[0-9]*' | grep -v '127.0.0.1'`

docker run -d --name "$projectInput-php-apache" --network "$projectInput-network" -p 80:80 -e XDEBUG_CONFIG="remote_host=$ipAddress" -v "$DOCUMENT_ROOT":/var/www/html "$REGISTRY/$PHP_APACHE_VERSION"