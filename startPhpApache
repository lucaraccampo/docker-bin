#!/usr/bin/env bash

. `pwd`/docker-config/config.sh

#Update assets
updateImages() {

    #Update Assets
    echo "Show active projects"
    ls -l "$ASSETS_FOLDER"
    echo -n "Which project do you want to synchronize? "
    read projectInput

    #Copy drupal assets and settings
    if [[ "$AVAILABLE_PLATFORM" == wordpress ]]
    then
        echo "Start copy FROM $ASSETS_FOLDER/$projectInput/$branchInput/uploads TO $PROJECT_ASSETS_FOLDER"
        sleep 5
        cp -R "$ASSETS_FOLDER/$projectInput/$branchInput/uploads" "$PROJECT_ASSETS_FOLDER"
    fi

    #ToDo: other platforms
}

echo -n "Which project do you want to synchronize? Type a name: "
read projectInput

echo "Show active branches"
git branch --all
echo "--------------------"

#Update source code
echo -n "Which branch do you want to use? The system will take care to checkout and pull automatically: "
read branchInput
if [[ -n "$branchInput" ]]
then
    git checkout "$branchInput" && git pull origin "$branchInput"
else
    echo "ERROR: No branch selected"
    exit
fi

read -p "Do you want to synchronize assets folder [Yy/Nn]?" yn
checkDockerStatus=true
while $checkDockerStatus; do
    case $yn in
        [Yy] ) updateImages
               checkDockerStatus=false
               ;;
        [Nn] ) echo "Assets not will be synchronized"
                checkDockerStatus=false
                ;;
        * ) read -p "Please answer Yy or Nn " yn
            ;;
    esac
done

#Stop and remove existing container
docker stop "$projectInput-phpmyadmin" && docker rm "$projectInput-phpmyadmin"
docker stop "$projectInput-php-apache" && docker rm "$projectInput-php-apache"

#Clean network
docker network rm "$projectInput-network"
docker network create "$projectInput-network"

#Update local mysql image
docker pull "$REGISTRY/phpmyadmin"

# Run phpmyadmin image
if [ ! -z "$REMOTE_MYSQL_HOST" ] && [ ! -z "$REMOTE_MYSQL_PORT" ]; then
   docker run -d --name "$projectInput"-phpmyadmin --network "$projectInput-network" -e PMA_HOST="$REMOTE_MYSQL_HOST" -e PMA_PORT="$REMOTE_MYSQL_PORT" -p 8888:80 "$REGISTRY/phpmyadmin"
fi

# Run php-apache image
docker pull "$REGISTRY/$PHP_APACHE_VERSION"

ipAddress=`ifconfig | grep -Eo 'inet (addr:)?([0-9]*\.){3}[0-9]*' | grep -Eo '([0-9]*\.){3}[0-9]*' | grep -v '127.0.0.1'`

docker run -d --name "$projectInput-php-apache" --network "$projectInput-network" -p 80:80 -e XDEBUG_CONFIG="remote_host=$ipAddress" -v "$DOCUMENT_ROOT":/var/www/html "$REGISTRY/$PHP_APACHE_VERSION"